name: Finance Tracker Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'week4/finance_tracker/**'
      - '.github/workflows/finance_tracker_tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'week4/finance_tracker/**'
      - '.github/workflows/finance_tracker_tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12, 3.13]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('week4/finance_tracker/requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      working-directory: ./week4/finance_tracker
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
    
    - name: Run linting with flake8
      working-directory: ./week4/finance_tracker
      run: |
        # Install flake8 for basic linting
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run tests with pytest
      working-directory: ./week4/finance_tracker
      run: |
        pytest --cov=. --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.11'  # Only upload once
      uses: codecov/codecov-action@v3
      with:
        file: ./week4/finance_tracker/coverage.xml
        flags: finance_tracker
        name: codecov-umbrella
        fail_ci_if_error: false

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install bandit for security scanning
      run: |
        python -m pip install --upgrade pip
        pip install bandit
    
    - name: Run security scan
      working-directory: ./week4/finance_tracker
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . || true  # Run again for terminal output

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install code quality tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort mypy
    
    - name: Check code formatting with Black
      working-directory: ./week4/finance_tracker
      run: |
        black --check --diff .
    
    - name: Check import sorting with isort
      working-directory: ./week4/finance_tracker
      run: |
        isort --check-only --diff .
    
    - name: Type checking with mypy
      working-directory: ./week4/finance_tracker
      run: |
        mypy . --ignore-missing-imports || true  # Don't fail on missing type stubs

  test-summary:
    runs-on: ubuntu-latest
    needs: [test, security-scan, code-quality]
    if: always()
    steps:
    - name: Test Summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Unit Tests | ${{ needs.test.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Security Scan | ${{ needs.security-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Code Quality | ${{ needs.code-quality.result }} |" >> $GITHUB_STEP_SUMMARY